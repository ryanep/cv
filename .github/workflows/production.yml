name: Production
on:
  push:
    branches:
      - master
jobs:
  lint:
    name: Lint
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.13.1'
      - run: npm install
      - run: npm run lint
  build:
    name: Build
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: '12.13.1'
      - run: npm install
      - run: npm run build
        env:
          DATA_URL: ${{ secrets.DATA_URL }}
      - uses: actions/upload-artifact@master
        with:
          name: index page
          path: dist/index.html
  terraform:
    name: Terraform
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    steps:
      - uses: actions/checkout@v1
      - name: Terraform init
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_working_dir: ./.infrastructure
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'init'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_name: ${{ secrets.NAME }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_aws_bucket_name: ${{ secrets.AWS_S3_BUCKET_NAME }}
          TF_VAR_subdomain: ${{ secrets.SUBDOMAIN }}
          TF_VAR_domain: ${{ secrets.DOMAIN }}
          TF_VAR_digital_ocean_token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}
          TF_VAR_aws_certificate_arn: ${{ secrets.AWS_SSL_CERTIFICATE_ARN }}
      - name: Terraform plan
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_working_dir: ./.infrastructure
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'plan'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_name: ${{ secrets.NAME }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_aws_bucket_name: ${{ secrets.AWS_S3_BUCKET_NAME }}
          TF_VAR_subdomain: ${{ secrets.SUBDOMAIN }}
          TF_VAR_domain: ${{ secrets.DOMAIN }}
          TF_VAR_digital_ocean_token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}
          TF_VAR_aws_certificate_arn: ${{ secrets.AWS_SSL_CERTIFICATE_ARN }}
      - name: Terraform apply
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_working_dir: ./.infrastructure
          tf_actions_version: 0.12.18
          tf_actions_subcommand: 'apply'
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          TF_VAR_name: ${{ secrets.NAME }}
          TF_VAR_aws_region: ${{ secrets.AWS_REGION }}
          TF_VAR_aws_bucket_name: ${{ secrets.AWS_S3_BUCKET_NAME }}
          TF_VAR_subdomain: ${{ secrets.SUBDOMAIN }}
          TF_VAR_domain: ${{ secrets.DOMAIN }}
          TF_VAR_digital_ocean_token: ${{ secrets.DIGITAL_OCEAN_TOKEN }}
          TF_VAR_aws_certificate_arn: ${{ secrets.AWS_SSL_CERTIFICATE_ARN }}
  deploy:
    name: Deploy
    runs-on: ${{ matrix.operating-system }}
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    needs: [build]
    steps:
      - name: checkout
        uses: actions/checkout@master
      - name: Cache
        uses: actions/download-artifact@master
        with:
          name: index page
          path: dist/
      - name: sync s3
        uses: jakejarvis/s3-sync-action@master
        with:
          args: --acl public-read --follow-symlinks --delete
        env:
          AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET_NAME }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
          SOURCE_DIR: 'dist'
      - name: invalidate cloudfront cache
        uses: chetan/invalidate-cloudfront-action@master
        env:
          DISTRIBUTION: ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }}
          PATHS: '/index.html'
          AWS_REGION: 'eu-west-2'
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
